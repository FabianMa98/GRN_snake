import glob
import pandas as pd
import numpy as np

configfile: "../config/config.yaml"

# FUNCTIONS
def get_table(SRA_run_info: Path) -> pd.DataFrame:
    """
    read SraRunInfo.csv  
    
    params
    ------
        SRA_run_info:
            SraRunInfo.csv from NCBI SRA run selector
            with information on LibraryLayout and Run

    returns
    -------
        data:
            pd.DataFrame object with all columns from
            params.SRA_run_info
            NOT VERIFIED!
        
    """
    data = pd.read_csv(SRA_run_info)

    return data

def get_SE(SRA_data: pd.DataFrame) -> pd.DataFrame:
    """
    get single end libaries from SRA_run_info

    params
    ------
        SRA_data:
            pd.DataFrame object from previous function
    
    returns
    -------
        SE_files:
            pd.DataFrme object containg only single-end
            library
    """
    return SRA_data.loc[SRA_data["LibraryLayout"] == "SINGLE"]

def get_PE(SRA_data: pd.DataFrame) -> pd.DataFrame:
    """
    get paired end libaries from SRA_run_info

    params
    ------
        SRA_data:
            pd.DataFrame object from previous function
    
    returns
    -------
        PE_files:
            pd.DataFrme object containg only single-end
            library
    """
    return SRA_data.loc[SRA_data["LibraryLayout"] == "PAIRED"]

# VARIABLES:
SRA_info=get_table(config["SraRunInfo"])
SRA_SE=get_SE(SRA_info)
SRA_SE_acc=SRA_SE["Run"].tolist()
SRA_PE=get_PE(SRA_info)
SRA_PE_acc=SRA_PE["Run"].tolist()
expr_matrix="processed_data/expression_matrix.tsv"

include: "rules/fastq-dump.smk"
include: "rules/trim.smk"
include: "rules/qc.smk"
include: "rules/kallisto.smk"
include: "rules/expression_matrix.smk"
if config["GRN"]:
    include: "rules/GRN.smk"
 
rule all:
    input:
        expand("raw_data/SE/{accession}.fastq.gz", accession = SRA_SE_acc),
        expand("raw_data/PE/{accession}_{PE}.fastq.gz", accession = SRA_PE_acc, PE = [1, 2]),
        #neeed to differentiate between SE and PE for kallisto as ambiguity otherwise arises, this might just be a temporary fix
        expand("processed_data/SE/{accession}", accession = SRA_SE_acc),
        expand("processed_data/PE/{accession}", accession = SRA_PE_acc),
        expand("processed_data/fastqc/SE/{accession}.trimmed_fastqc.html", accession = SRA_SE_acc),
        expand("processed_data/fastqc/PE/{accession}_{PE}.trimmed_fastqc.html", accession = SRA_PE_acc, PE = [1,2]),
        mat = expr_matrix